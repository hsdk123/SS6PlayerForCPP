/**
	SS6Player for CPP(C++/ssbp2)
	Platform: 

	Copyright(C) Web Technology Corp.
	All rights reserved.
*/
/* ========================================================================== */
/* MEMO: 【注意!!】                                                           */
/* 本ヘッダはentity_effect.hの一部です（その他・未分類関数群）。              */
/* 単独でincludeしないでください（一応コンパイルエラー防護はしているものの、  */
/* 内容が正常に適用されません）。                                             */
/* ※EntityEffectクラスの機能が大きい巨大なため、各区分の機能を見通しやすくす */
/*   るために（C#のpartial的に）ファイルを分割してあるだけです。              */
/* ========================================================================== */
/* -------------------------------------------------------------------------- */
/*                                                 Includes / Compile-Options */
/* -------------------------------------------------------------------------- */
#if defined(__SS6PLAYER_ENTITY_CLASS__)

/* -------------------------------------------------------------------------- */
/*                                                  Class Functions (Partial) */
/* -------------------------------------------------------------------------- */
// namespace SpriteStudio6	{
// class Entity	{
	/* ----------------------------------------------- Functions */
private:
protected:
public:
	/* ********************************************************* */
	//! 強制非表示状態の設定
	/*!
	@param	flagSwitch
		非表示状態
		true == 強制非表示
		false == 強制非表示解除（アニメーションデータに準じる）

	@retval	関数値
		true == 成功
		false == 失敗

	指定パーツの強制非表示状態を設定します。
	flagSwitchがtrueの場合は、指定パーツをアニメーションデータの
		状態を問わず表示しません。
	falseの場合の表示状態は、アニメーションデータの状態に依存します
		（強制的に表示する……ような指定はありません）。

	※エフェクトの場合、パーツ毎の非表示ではないため、厳密にはパーツ
		の区分ではありませんが、アニメーションと併せて同区分に定義
		してあります。
	*/
	bool HideSet(bool flagSwitch);

	/* ********************************************************* */
	//! エフェクトデータ中のパーツ数の取得
	/*!
	@param	なし

	@retval	関数値
		エフェクトデータ中のパーツ数
		-1 == 失敗

	現在扱っているエフェクトに定義されているパーツ数を取得します。
	※パーツIDは「0 ～ 本関数の値-1」の範囲の値になります。
	*/
	int CountGetParts(void);

	/* ********************************************************* */
	//! パーツ種別の取得
	/*!
	@param	idParts
		パーツID

	@retval	関数値
		パーツ種別
		-1 == 失敗

	現在扱っているエフェクトに定義されているパーツの種別を取得します。
	*/
	Library::Data::Parts::Effect::KindFeature FeatureGetParts(int idParts);

	/* ********************************************************* */
	//! パーツIDの取得
	/*!
	@param	name
		パーツ名

	@retval	関数値
		パーツID
		-1 == 失敗

	現在扱っているエフェクトに定義されているパーツの中から
		nameと同じ文字列長を持ったパーツのIDを返します。
	*/
	int IDGetParts(const char* name, size_t length=0);

	/* ********************************************************* */
	//! パーツ名の取得
	/*!
	@param	idParts
		パーツID

	@retval	関数値
		パーツ名の文字列
		nullptr == 失敗

	現在扱っているエフェクトに定義されているパーツの名前を取得します。
	*/
	const char* NameGetParts(int idParts);

// };	/* EntityEffect */
// }	/* SpriteStudio6 */

#endif	/* defined(__SS6PLAYER_ENTITY_CLASS__) */
