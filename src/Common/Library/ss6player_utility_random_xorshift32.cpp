/**
	SS6Player for CPP(C++/ssbp2)

	Copyright(C) Web Technology Corp.
	All rights reserved.
*/
/* -------------------------------------------------------------------------- */
/*                                                 Includes / Compile-Options */
/* -------------------------------------------------------------------------- */
#include "ss6player_utility_random_xorshift32.h"

namespace SpriteStudio6	{
namespace Library	{
namespace Utility	{
namespace Random	{
/* -------------------------------------------------------------------------- */
/*                          [File-Scope internal] Defines (Value-Type Macros) */
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
/*                       [File-Scope internal] Classes / Structures / Typedef */
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
/*                                            [File-Scope internal] Variables */
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
/*              [File-Scope internal] Inline-Functions / Function-Type Macros */
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
/*                                  [File-Scope internal] Function Prototypes */
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
/*                                                                  Functions */
/*                                                                 XorShift32 */
/* -------------------------------------------------------------------------- */
// void XorShift32::init_genrand(Uint32 seed)
// Uint32 XorShift32::genrand_uint32(void)
// Float32 XorShift32::genrand_float32(void)
// Float64 XorShift32::genrand_real1(void)
// Float64 XorShift32::genrand_real2(void)
// Sint32 XorShift32::genrand_N(Sint32 iN)

/* ********************************************************* */
//! コンストラクタ
/* --------------------------------------------------------- */
/* MEMO:
 * 
 */
XorShift32::XorShift32(void) :
	Generator()
{
	SeedNow = 0;
}

/* ********************************************************* */
//! デストラクタ
/* --------------------------------------------------------- */
/* MEMO:
 * 
 */
// XorShift32::~XorShift32(void)

/* ********************************************************* */
//! 乱数種の初期化
/* --------------------------------------------------------- */
/* MEMO:
 * 
 */
void XorShift32::InitSeed(Uint32 seed)
{
	SeedNow = seed;
}

/* ********************************************************* */
//! 乱数種の取得
/* --------------------------------------------------------- */
/* MEMO:
 * 
 */
const Uint32* XorShift32::ListGetSeed(int* lengthList)
{
	if(nullptr != lengthList)	{
		*lengthList = 0;
	}
	return(nullptr);
}

/* ********************************************************* */
//! 乱数の取得（Uint32幅）
/* --------------------------------------------------------- */
/* MEMO:
 * 
 */
Uint32 XorShift32::RandomUint32(void)
{
	return(genrand_uint32());
}

/* ********************************************************* */
//! 乱数の取得（Float64幅）
/* --------------------------------------------------------- */
/* MEMO:
 * 
 */
Float64 XorShift32::RandomDouble(Float64 valueMax)
{
	return((genrand_uint32() * (valueMax / 4294967296.0)));
}

/* ********************************************************* */
//! 乱数の取得（Float32幅）
/* --------------------------------------------------------- */
/* MEMO:
 * 
 */
Float32 XorShift32::RandomFloat(Float32 valueMax)
{
//	return((float)(genrand_uint32() * (valueMax / 4294967296.0f)));	/* 8388607.0f */
//	return((float)(genrand_uint32() * (valueMax * (1.0f/ 4294967296.0f))));	/* 8388607.0f */
	SeedNow = SeedNow ^ (SeedNow << 13);
	SeedNow = SeedNow ^ (SeedNow >> 17);
	SeedNow = SeedNow ^ (SeedNow << 15);
	return((float)SeedNow * (valueMax * (1.0f/ 4294967296.0f)));
}

/* ********************************************************* */
//! 乱数の取得（指定値まで）
/* --------------------------------------------------------- */
/* MEMO:
 * 
 */
Sint32 XorShift32::RandomN(Sint32 valueMax)
{
	return(genrand_N(valueMax));
}

/* -------------------------------------------------------------------------- */
/*                                                                  Functions */
/* -------------------------------------------------------------------------- */

}	/* Random */
}	/* Utility */
}	/* Library */
}	/* SpriteStudio6 */
